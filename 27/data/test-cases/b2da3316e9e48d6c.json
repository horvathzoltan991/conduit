{"uid":"b2da3316e9e48d6c","name":"test_pagination","fullName":"Test_Conduit.test_conduit.TestConduit#test_pagination","historyId":"60d10207fd730638f808be26fdfb02ac","time":{"start":1654676788912,"stop":1654676824389,"duration":35477},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f27a7e1aca0>\n\n    def test_pagination(self):\n        login(self.browser, test_data['valid_email'], test_data['valid_password'])\n>       page_links = WebDriverWait(self.browser, 10).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"page-link\"]')))\n\nTest_Conduit/test_conduit.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9317be458f50d077509c909c9b66227a\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7f27a7b65850>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1654676787345,"stop":1654676788911,"duration":1566},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_conduit.TestConduit object at 0x7f27a7e1aca0>\n\n    def test_pagination(self):\n        login(self.browser, test_data['valid_email'], test_data['valid_password'])\n>       page_links = WebDriverWait(self.browser, 10).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"page-link\"]')))\n\nTest_Conduit/test_conduit.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9317be458f50d077509c909c9b66227a\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x7f27a7b65850>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException","steps":[],"attachments":[{"uid":"748580029b613c3c","name":"log","source":"748580029b613c3c.txt","type":"text/plain","size":338},{"uid":"a722473da183dbce","name":"stdout","source":"a722473da183dbce.txt","type":"text/plain","size":1},{"uid":"c981b8b51bf81a1","name":"stderr","source":"c981b8b51bf81a1.txt","type":"text/plain","size":267}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1654676824399,"stop":1654676824455,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"Test_Conduit"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az82-486"},{"name":"thread","value":"3013-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Test_Conduit.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b2da3316e9e48d6c.json","parameterValues":[]}